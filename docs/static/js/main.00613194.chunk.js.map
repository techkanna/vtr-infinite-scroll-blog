{"version":3,"sources":["components/Filter.js","components/Loader.js","components/Posts.js","App.js","index.js"],"names":["Filter","setPosts","className","type","onChange","e","term","target","value","toUpperCase","posts","filter","post","title","indexOf","body","placeholder","Loader","loading","Posts","map","key","id","limit","window","innerHeight","App","useState","page","setPage","setLoading","useEffect","a","fetch","res","json","data","p","getPosts","handleScroll","document","documentElement","scrollTop","scrollHeight","clientHeight","setTimeout","addEventListener","removeEventListener","ReactDOM","render","StrictMode","getElementById"],"mappings":"sMA6BeA,MA3Bf,YAA+B,IAAbC,EAAY,EAAZA,SAehB,OACE,yBAAKC,UAAU,oBACb,2BACEC,KAAK,OACLC,SAlBe,SAACC,GACpB,IAAMC,EAAOD,EAAEE,OAAOC,MAAMC,cAC5B,GAAIH,EAAM,CAQRL,GAPkB,SAACS,GACjB,OAAOA,EAAMC,QACX,SAACC,GAAD,OACEA,EAAKC,MAAMJ,cAAcK,QAAQR,IAAS,GAC1CM,EAAKG,KAAKN,cAAcK,QAAQR,IAAS,UAY7CJ,UAAU,SACVc,YAAY,sBCXLC,MAVf,YAA8B,IAAZC,EAAW,EAAXA,QAChB,OACE,yBAAKhB,UAAS,iBAAYgB,EAAU,OAAS,KAC3C,yBAAKhB,UAAU,WACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,aCWNiB,MAhBf,YAA2B,IAAVT,EAAS,EAATA,MACf,OACE,6BACGA,EAAMU,KAAI,SAACR,GAAD,OACT,yBAAKV,UAAU,OAAOmB,IAAKT,EAAKU,IAC9B,yBAAKpB,UAAU,UAAUU,EAAKU,IAC9B,yBAAKpB,UAAU,aACb,wBAAIA,UAAU,cAAcU,EAAKC,OACjC,uBAAGX,UAAU,aAAaU,EAAKG,aCJvCQ,EAAQ,EACZC,OAAOC,aAAe,OAASF,EAAQ,IAoDxBG,MAnDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNC,EADM,KACAC,EADA,OAEaF,mBAAS,IAFtB,mBAENjB,EAFM,KAECT,EAFD,OAGiB0B,oBAAS,GAH1B,mBAGNT,EAHM,KAGGY,EAHH,KAyCb,OApCAC,qBAAU,YAEM,uCAAG,8BAAAC,EAAA,sEACGC,MAAM,qDAAD,OACgCV,EADhC,kBAC+CK,IAFvD,cACTM,EADS,gBAKIA,EAAIC,OALR,OAKTC,EALS,OAMfnC,GAAS,SAACoC,GAAD,4BAAWA,GAAX,YAAiBD,OANX,2CAAH,qDAQdE,GAEA,IAAMC,EAAe,WAAO,IAAD,EAKrBC,SAASC,gBAHXC,EAFuB,EAEvBA,UACAC,EAHuB,EAGvBA,aAGED,EANqB,EAIvBE,cAE8BD,EAAe,IAC7Cb,GAAW,GAEXe,YAAW,WACTf,GAAW,GAEXe,YAAW,WACThB,EAAQD,EAAO,KACd,OACF,OAIP,OADAJ,OAAOsB,iBAAiB,SAAUP,GAC3B,WACLf,OAAOuB,oBAAoB,SAAUR,MAEtC,CAACX,IAGF,oCACE,uCACA,kBAAC,EAAD,CAAQ3B,SAAUA,IAClB,kBAAC,EAAD,CAAOS,MAAOA,IACd,kBAAC,EAAD,CAAQQ,QAASA,MClDvB8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFV,SAASW,eAAe,U","file":"static/js/main.00613194.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Filter({ setPosts }) {\r\n  const handleChange = (e) => {\r\n    const term = e.target.value.toUpperCase();\r\n    if (term) {\r\n      const _setPosts = (posts) => {\r\n        return posts.filter(\r\n          (post) =>\r\n            post.title.toUpperCase().indexOf(term) > -1 ||\r\n            post.body.toUpperCase().indexOf(term) > -1\r\n        );\r\n      };\r\n      setPosts(_setPosts);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n        className=\"filter\"\r\n        placeholder=\"Filter posts...\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nfunction Loader({ loading }) {\r\n  return (\r\n    <div className={`loader ${loading ? 'show' : ''}`}>\r\n      <div className=\"circle\"></div>\r\n      <div className=\"circle\"></div>\r\n      <div className=\"circle\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\n\r\nfunction Posts({ posts }) {\r\n  return (\r\n    <div>\r\n      {posts.map((post) => (\r\n        <div className=\"post\" key={post.id}>\r\n          <div className=\"number\">{post.id}</div>\r\n          <div className=\"post-info\">\r\n            <h2 className=\"post-title\">{post.title}</h2>\r\n            <p className=\"post-body\">{post.body}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Filter from './components/Filter';\nimport Loader from './components/Loader';\nimport Posts from './components/Posts';\n\nlet limit = 5;\nwindow.innerHeight >= 1127 && (limit = 10);\nfunction App() {\n  const [page, setPage] = useState(1);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // Fetch posts from API\n    const getPosts = async () => {\n      const res = await fetch(\n        `https://jsonplaceholder.typicode.com/posts?_limit=${limit}&_page=${page}`\n      );\n\n      const data = await res.json();\n      setPosts((p) => [...p, ...data]);\n    };\n    getPosts();\n\n    const handleScroll = () => {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n      } = document.documentElement;\n      if (scrollTop + clientHeight >= scrollHeight - 5) {\n        setLoading(true);\n\n        setTimeout(() => {\n          setLoading(false);\n\n          setTimeout(() => {\n            setPage(page + 1);\n          }, 300);\n        }, 1000);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [page]);\n\n  return (\n    <>\n      <h1>My Blog</h1>\n      <Filter setPosts={setPosts} />\n      <Posts posts={posts} />\n      <Loader loading={loading} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}